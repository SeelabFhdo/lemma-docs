context ChargingStationManagement {
    structure Location<valueObject> {
        immutable double latitude,
        immutable double longitude
    }

    structure ParkingArea<aggregate, entity> {
        long id<identifier>,
        string name,
        string description,
        Location location<part>,
        ChargerSpeed chargerSpeed,
        TimePeriods availability<part>,
        boolean activated,
        // Function signature to convert the current ParkingArea instance
        // into a ParkingAreaInformation instance
        function ParkingAreaInformation toParkingAreaInformation
    }

    enum ChargerSpeed {
        FAST,
        NORMAL
    }

    structure TimePeriod<valueObject> {
        immutable date start,
        immutable date end
    }

    collection TimePeriods { TimePeriod p }

    // Domain concepts for microservice interaction
    structure CreateParkingAreaCommand<valueObject> {
        immutable ParkingAreaInformation info
    }

    structure ParkingAreaInformation<valueObject> {
        immutable string name,
        immutable string description,
        immutable Location location,
        immutable ChargerSpeed chargerSpeed,
        immutable TimePeriods availability,
        immutable boolean activated
    }

    structure CreateParkingAreaCommandResponse<valueObject> {
        immutable long id,
        immutable string errorMessage
    }
}